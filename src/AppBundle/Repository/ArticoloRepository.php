<?php

namespace AppBundle\Repository;

/**
 * ArticoloRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticoloRepository extends \Doctrine\ORM\EntityRepository
{
    public function RicercaAttributiArticoliProducibiliByValori($em,$idproducibile, $valori ){
       $numValori=count($valori);
       if($numValori==0){
           $query=' SELECT DISTINCT att.id as idattributo, att.Nome,p.Nome as producibile, p.Descrizione
                    FROM producibile p, attributi att, gruppo__attributi ga
                    WHERE  p.GruppoId=ga.GruppoId AND ga.AttributoId=att.id AND p.categoriaId='.$idproducibile.'
                    LIMIT 0,1';
       }else{
            $str="(".$valori[0];
            for ($i=1;$i<$numValori;$i++){
                $str=$str.",".$valori[$i];
            }
            $str=$str.")";
            $query ='
                     SELECT DISTINCT att.id as idattributo, att.Nome,p.Nome as producibile, p.Descrizione
                     FROM articolo a, producibile p, attributi att, gruppo__attributi ga, ( SELECT va.ArticoloId as art, GROUP_CONCAT(va.ValoreId) 
                                                                                            FROM valori__articolo va
                                                                                            WHERE va.ValoreId in '.$str.' 
                                                                                            GROUP BY (va.ArticoloId)
                                                                                            HAVING COUNT(*)='.$numValori.') as ris
                     WHERE a.id= ris.art and a.ProducibileId=p.id AND p.GruppoId=ga.GruppoId AND ga.AttributoId=att.id
                     LIMIT '.$numValori.',1';
        }
        $stmt = $em->getConnection()->prepare($query);
        $stmt->execute();
        return $stmt->fetchAll();
        
    }
    
    public function ArticoliProducibiliByValori($em,$valori){
        $str="(".$valori[0];
        $numValori=count($valori);
            for ($i=1;$i<$numValori;$i++){
                $str=$str.",".$valori[$i];
            }
            $str=$str.")";
            $query ='
                        SELECT va.ArticoloId as art, GROUP_CONCAT(va.ValoreId) ,a.*, GROUP_CONCAT(v.Nome) as valori, GROUP_CONCAT(att.Nome) as specifica
                        FROM valori__articolo va, articolo a, attributi att, valore v
                        WHERE va.ValoreId in '.$str.'  and va.ArticoloId=a.id and v.id=va.ValoreId and v.AttributoId=att.id
                        GROUP BY (va.ArticoloId)
                        HAVING COUNT(*)='.$numValori;
        
        $stmt = $em->getConnection()->prepare($query);
        $stmt->execute();
        return $stmt->fetchAll();
    }
    
    public function ConfermaArticolo($articolo){
        
        $ris[0]=array("tipo"=> "Articolo","contenuto"=>$articolo[0]['Denominazione']);
        $ris[1]=array("tipo"=>"Codice","contenuto"=>$articolo[0]['id']);
        $ris[2]=array("tipo"=>"Prezzo","contenuto"=>$articolo[0]['PrezzoVendita']);
        $valori=explode(",",$articolo[0]['valori']);
        $specifiche=explode(",",$articolo[0]['specifica']);
        for ($i=0;$i<count($valori);$i++){
            $ris[]=array("tipo"=>$specifiche[$i],"contenuto"=>$valori[$i]);
        }
        return($ris);
    }
    
}

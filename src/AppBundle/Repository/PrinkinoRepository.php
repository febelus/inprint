<?php

namespace AppBundle\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * PrinkinoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PrinkinoRepository extends EntityRepository {
    
    public function checkUsername($em,$user){
        
        $p = $em->getRepository("AppBundle:Prinkino")->findOneBy(array("username"=>$user,));
        if(!$p) {
            return(FALSE); //cos'è p
        }else {return TRUE;}
    }
    
    public function getIdByUsername($em,$user){
         $query = $em->createQuery(
            'SELECT p.id
            FROM AppBundle:Prinkino p
            WHERE p.username = :user'
        )->setParameter('user', $user);
        return($query->getSingleScalarResult());
    }

        public function tabellaArrivi($em,$user,$n){
        
        $id= $this->getIdByUsername($em,$user);
        $query = $em->createQuery(
            'SELECT o.clienteId as cliente, o.id as numero, o.trackNumber as tracknumber, o.data
            FROM AppBundle:Ordine o, AppBundle:Possedere p
            WHERE o.prinkinoId = :id AND p.statoId = 21 AND p.ordineId=o.id' 
        )->setParameter('id',$id);//Il numero 21 è il presunto id dello stato "Spedito"

        $tabellaArrivi = $query->setMaxResults($n)->getResult();
        return $tabellaArrivi;

    }
    
    public function tabellaSospesi($em,$user,$n){
    
       $id= $this->getIdByUsername($em,$user);
        $query = $em->createQuery(
            
                'SELECT o.clienteId as cliente, max( p.statoId) as stato, o.id
                FROM AppBundle:Ordine o, AppBundle:Possedere p
                WHERE o.prinkinoId = :prink AND p.ordineId=o.id
                GROUP BY o.id 
                HAVING stato< :stato' )->setParameter('prink', $id)->setParameter('stato',7);

        $tabellaSospesi = $query->setMaxResults($n)->getResult();
        return $tabellaSospesi;        
        
    }
    
    
}